"use strict";(self.webpackChunkexplorer_docs=self.webpackChunkexplorer_docs||[]).push([[533],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(n),g=a,f=c["".concat(s,".").concat(g)]||c[g]||p[g]||l;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3039:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(4137));const l={sidebar_position:0},i="config.js",o={unversionedId:"api/config",id:"api/config",title:"config.js",description:"Overview",source:"@site/docs/api/config.md",sourceDirName:"api",slug:"/api/config",permalink:"/explorer/api/config",draft:!1,editUrl:"https://github.com/D2KLab/explorer/tree/master/docs/docs/api/config.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"api"},s={},u=[{value:"Overview",id:"overview",level:2},{value:"Root fields",id:"root-fields",level:2},{value:"<code>debug</code>",id:"debug",level:3},{value:"Metadata fields",id:"metadata-fields",level:2},{value:"<code>title</code>",id:"metadata-title",level:3},{value:"<code>logo</code>",id:"metadata-logo",level:3},{value:"Home fields",id:"home-fields",level:2},{value:"Routes fields",id:"routes-fields",level:2},{value:"Gallery fields",id:"gallery-fields",level:2},{value:"Vocabularies fields",id:"vocabularies-fields",level:2},{value:"<code>QueryObject</code>",id:"QueryObject",level:2},{value:"See also",id:"see-also",level:2}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configjs"},(0,a.kt)("inlineCode",{parentName:"h1"},"config.js")),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"config.js")," contains configurations for your site and is placed in the root directory of your site."),(0,a.kt)("p",null,"It usually exports a site configuration object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"module.exports = {\n  // site config...\n};\n")),(0,a.kt)("h2",{id:"root-fields"},"Root fields"),(0,a.kt)("h3",{id:"debug"},(0,a.kt)("inlineCode",{parentName:"h3"},"debug")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"module.exports = {\n  debug: true,\n};\n")),(0,a.kt)("h2",{id:"metadata-fields"},"Metadata fields"),(0,a.kt)("h3",{id:"metadata-title"},(0,a.kt)("inlineCode",{parentName:"h3"},"title")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"string | undefined"))),(0,a.kt)("p",null,"Title for your website. Will be used in metadata and as browser tab title."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"module.exports = {\n  metadata: {\n    title: 'D2KLab Explorer',\n  },\n};\n")),(0,a.kt)("h3",{id:"metadata-logo"},(0,a.kt)("inlineCode",{parentName:"h3"},"logo")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: ",(0,a.kt)("inlineCode",{parentName:"li"},"string | undefined"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"module.exports = {\n  metadata: {\n    logo: '/images/logo.png',\n  },\n};\n")),(0,a.kt)("h2",{id:"home-fields"},"Home fields"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type HomeConfig = {\n  hero?: HomeHeroConfig;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type HomeHeroConfig = {\n  showHeadline?: boolean;\n  showLogo?: boolean;\n}\n")),(0,a.kt)("h2",{id:"routes-fields"},"Routes fields"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type RouteConfig = {\n  view?: string;\n  showInNavbar?: boolean;\n  rdfType?: string;\n  uriBase?: string;\n  details?: DetailsConfig;\n  filters: Filter[];\n  baseWhere?: string | string[];\n  query?: QueryObject;\n};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type DetailsConfig = {\n  view?: string;\n  query?: QueryObject;\n};\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type Filter = {\n  id: string;\n  label?: string;\n  isMulti?: boolean;\n  isOption?: boolean;\n  isSortable?: boolean;\n  query?: QueryObject;\n  whereFunc?: (value: string) => string | string[] | null | undefined;\n  filterFunc?: (value: string) => string | string[] | null | undefined;\n  labelFunc?: (props: any) => string | null | undefined;\n};\n")),(0,a.kt)("h2",{id:"gallery-fields"},"Gallery fields"),(0,a.kt)("p",null,"The full list of ",(0,a.kt)("inlineCode",{parentName:"p"},"CarouselProps")," can be found in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/leandrowd/react-responsive-carousel#props"},"react-responsive-carousel documentation"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type GalleryConfig = {\n  options: CarouselProps;\n};\n")),(0,a.kt)("h2",{id:"vocabularies-fields"},"Vocabularies fields"),(0,a.kt)("h2",{id:"QueryObject"},(0,a.kt)("inlineCode",{parentName:"h2"},"QueryObject")),(0,a.kt)("p",null,"Taken from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/D2KLab/sparql-transformer#the-root--properties"},"sparql-transformer"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'type QueryObject = {\n  /**\n   * Add where clause in the triple format.\n   * Ex. "$where": "?id a dbo:City"\n   */\n  $where?: string | any[];\n  /**\n   * Set VALUES for specified variables as a map.\n   * The presence of a lang tag or of the \'$lang\' attribute attached to the related property is taken in account.\n   * Ex. "$values": {"?id": ["dbr:Bari", "http://dbpedia.org/resource/Bologna"]}\n   */\n  $values?: object;\n  /** LIMIT the SPARQL results */\n  $limit?: number;\n  /** Perform the LIMIT operation in the query or on the obtained results (library) */\n  $limitMode?: \'query\' | \'library\';\n  /** Define the graph FROM which selecting the results */\n  $from?: string | string[];\n  /** OFFSET applied to the SPARQL results */\n  $offset?: number;\n  /** Set the DISTINCT in the select */\n  $distinct?: boolean;\n  /**\n   * Build an ORDER BY on the variables in the input.\n   * Ex. "$orderby":["DESC(?name)","?age"]\n   */\n  $orderby?: string | string[];\n  /**\n   * Build an GROUP BY on the variables in the input.\n   * Ex. "$groupby":"?id"\n   */\n  $groupby?: string | string[];\n  /** Allows to declare the content of HAVING. If it is an array, the items are concatenated by &&. */\n  $having?: string | string[];\n  /**\n   * Add the content as a FILTER.\n   * Ex. "$filter": "?myNum > 3"\n   */\n  $filter?: string | string [];\n  /** Set the prefixes in the format "foaf": "http://xmlns.com/foaf/0.1/". */\n  $prefixes?: object;\n  /**\n   * The default language to use as $bestlang, expressed through the Accept-Language standard.\n   * See: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\n   * Ex. $lang:en;q=1, it;q=0.7 *;q=0.1\n   */\n  $lang?: string;\n  /**\n   * When hide, language tags are not included in the output.\n   * Similar to the inline $langTag, but acting at a global level.\n   * Defaults to \'show\'.\n   * Ex. hide => "label":"Bologna" ; show => "label":{"value": "Bologna", "language": "it"}\n   */\n  $langTag?: \'hide\' | \'show\';\n}\n')),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/D2KLab/sparql-transformer"},"sparql-transformer"))))}p.isMDXComponent=!0}}]);